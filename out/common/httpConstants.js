// following guidance from https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html and https://datatracker.ietf.org/doc/html/rfc5789#section-2
export var Method;
(function (Method) {
    Method["options"] = "OPTIONS";
    Method["get"] = "GET";
    Method["head"] = "HEAD";
    Method["post"] = "POST";
    Method["put"] = "PUT";
    Method["delete"] = "DELETE";
    Method["trace"] = "TRACE";
    Method["connect"] = "CONNECT";
    Method["patch"] = "PATCH";
})(Method || (Method = {}));
// https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers
export var RequestHeaderField;
(function (RequestHeaderField) {
    RequestHeaderField["wwwAuthentication"] = "WWW-Authenticate";
    RequestHeaderField["authorization"] = "Authorization";
    RequestHeaderField["proxyAuthenticate"] = "Proxy-Authenticate";
    RequestHeaderField["proxyAuthentication"] = "Proxy-Authorization";
    RequestHeaderField["age"] = "Age";
    RequestHeaderField["cacheControl"] = "Cache-Control";
    RequestHeaderField["clearSiteData"] = "Clear-Site-Data";
    RequestHeaderField["expires"] = "Expires";
    RequestHeaderField["pragma"] = "Pragma";
    RequestHeaderField["warning"] = "Warning";
    RequestHeaderField["acceptCH"] = "Accept-CH";
    RequestHeaderField["acceptCHLifetime"] = "Accept-CH-Lifetime";
    RequestHeaderField["earlyData"] = "Early-Data";
    RequestHeaderField["deviceMemory"] = "Device-Memory";
    RequestHeaderField["viewportWidth"] = "Viewport-Width";
    RequestHeaderField["width"] = "Width";
    RequestHeaderField["lastModified"] = "Last-Modified";
    RequestHeaderField["eTag"] = "ETag";
    RequestHeaderField["ifMatch"] = "If-Match";
    RequestHeaderField["ifNoneMatch"] = "If-None-Match";
    RequestHeaderField["ifModifiedSince"] = "If-Modified-Since";
    RequestHeaderField["ifUnmodifiedSince"] = "If-Unmodified-Since";
    RequestHeaderField["vary"] = "Vary";
    RequestHeaderField["accept"] = "Accept";
    RequestHeaderField["acceptCharset"] = "Accept-Charset";
    RequestHeaderField["acceptEncoding"] = "Accept-Encoding";
    RequestHeaderField["acceptLanguage"] = "Accept-Language";
    RequestHeaderField["expect"] = "Expect";
    RequestHeaderField["maxForwards"] = "Max-Forwards";
    RequestHeaderField["cookie"] = "Cookie";
    RequestHeaderField["setCookie"] = "Set-Cookie";
    RequestHeaderField["accessControlAllowOrigin"] = "Access-Control-Allow-Origin";
    RequestHeaderField["accessControlAllowCredentials"] = "Access-Control-Allow-Credentials";
    RequestHeaderField["accessControlAllowHeaders"] = "Access-Control-Allow-Headers";
    RequestHeaderField["accessControlAllowMethods"] = "Access-Control-Allow-Methods";
    RequestHeaderField["accessControlExposeHeaders"] = "Access-Control-Expose-Headers";
    RequestHeaderField["accessControlMaxAge"] = "Access-Control-Max-Age";
    RequestHeaderField["accessControlRequestHeaders"] = "Access-Control-Request-Headers";
    RequestHeaderField["accessControlRequestMethod"] = "Access-Control-Request-Method";
    RequestHeaderField["origin"] = "Origin";
    RequestHeaderField["timingAllowOrigin"] = "Timing-Allow-Origin";
    RequestHeaderField["dnt"] = "DNT";
    RequestHeaderField["tk"] = "Tk";
    RequestHeaderField["contentDisposition"] = "Content-Disposition";
    RequestHeaderField["contentLength"] = "Content-Length";
    RequestHeaderField["contentType"] = "Content-Type";
    RequestHeaderField["contentEncoding"] = "Content-Encoding";
    RequestHeaderField["contentLanguage"] = "Content-Language";
    RequestHeaderField["contentLocation"] = "Content-Location";
    RequestHeaderField["forwarded"] = "Forwarded";
    RequestHeaderField["via"] = "Via";
    RequestHeaderField["location"] = "Location";
    RequestHeaderField["from"] = "From";
    RequestHeaderField["host"] = "Host";
    RequestHeaderField["referer"] = "Referer";
    RequestHeaderField["referrerPolicy"] = "Referrer-Policy";
    RequestHeaderField["userAgent"] = "User-Agent";
})(RequestHeaderField || (RequestHeaderField = {}));
export var ResponseHeaderField;
(function (ResponseHeaderField) {
    ResponseHeaderField["allow"] = "Allow";
    ResponseHeaderField["date"] = "Date";
    ResponseHeaderField["expires"] = "Expires";
    ResponseHeaderField["cacheControl"] = "Cache-Control";
    ResponseHeaderField["contentType"] = "Content-Type";
    ResponseHeaderField["contentLength"] = "Content-Length";
    ResponseHeaderField["p3p"] = "P3P";
    ResponseHeaderField["server"] = "Server";
    ResponseHeaderField["xXssProtection"] = "X-XSS-Protection";
    ResponseHeaderField["xFrameOptions"] = "X-Frame-Options";
    ResponseHeaderField["setCookie"] = "Set-Cookie";
    ResponseHeaderField["connection"] = "Connection";
    ResponseHeaderField["transferEncoding"] = "Transfer-Encoding";
})(ResponseHeaderField || (ResponseHeaderField = {}));
// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types
// https://en.wikipedia.org/wiki/Media_type
export var MIMEType;
(function (MIMEType) {
    MIMEType["json"] = "application/json";
    MIMEType["octet"] = "application/octet-stream";
    MIMEType["sql"] = "application/sql";
    MIMEType["plain"] = "text/plain";
    MIMEType["css"] = "text/css";
    MIMEType["csv"] = "text/csv";
    MIMEType["html"] = "text/html";
    MIMEType["xml"] = "text/xml";
    MIMEType["xmlApp"] = "application/xml";
    MIMEType["js"] = "text/javascript";
    MIMEType["jsApp"] = "application/javascript";
    MIMEType["ecma"] = "application/ecmascript";
    MIMEType["ecmaApp"] = "text/ecmascript";
    MIMEType["graphql"] = "application/graphql";
    MIMEType["ldJson"] = "application/ld+json";
    MIMEType["wwwFormUrlEncoded"] = "application/x-www-form-urlencoded";
})(MIMEType || (MIMEType = {}));
//# sourceMappingURL=httpConstants.js.map